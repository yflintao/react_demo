{"version":3,"file":"static/js/485.7ea857e5.chunk.js","mappings":"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","sources":["pages/Article/index.js","redux/actions.js"],"sourcesContent":["import {Link, useNavigate} from 'react-router-dom'\nimport {Table, Tag, Space, Card, Breadcrumb, Form, Button, Radio, DatePicker, Select, Input} from 'antd'\nimport 'moment/locale/zh-cn'\nimport locale from 'antd/es/date-picker/locale/zh_CN'\nimport {EditOutlined, DeleteOutlined} from '@ant-design/icons'\nimport {useEffect, useState} from 'react'\nimport {http} from '@/utils'\nimport { connect } from 'react-redux'\nimport {get_channel_async} from \"@/redux/actions\";\n\nconst {Option} = Select\nconst {RangePicker} = DatePicker\n\n\nconst Article = (props) => {\n    const [Channel,setChannel] = useState([]);\n\n    useEffect(()=>{\n        props.get_channel_async();\n        setChannel(props.channelReducer.channel);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n\n    const [RadioList] = useState([\n        {key:'null',name:'全部'},{key:'0',name:'草稿'},{key:'1',name:'待审核'},{key:'2',name:'审核通过'},{key:'3',name:'审核失败'}\n    ])\n\n    // 文章列表管理 统一管理数据 将来修改给setArticleData传对象\n    const [articleData, setArticleData] = useState({\n        list: [],// 文章列表\n        count: 0 // 文章数量\n    })\n\n    // 文章参数管理\n    const [params, setParams] = useState({\n        page: 1,\n        size: 10,\n        keywords:''\n    })\n    // 获取文章列表\n    useEffect( () => {\n        (async () => {\n            const recode = await http.get('/article/search', {params});\n            const {count, rows} = recode.data;\n            setArticleData({\n                list: rows,\n                count\n            })\n        })()\n    }, [params])\n\n    /* 表单筛选功能实现 */\n    const onFinish = (values) => {\n        const { date,...itemData} = values;\n        // 数据处理\n        const _params = {}\n        // 初始化时间\n        if (date) {\n            _params.begin_pubdate = date[0].format('YYYY-MM-DD')\n            _params.end_pubdate = date[1].format('YYYY-MM-DD')\n        }\n        // 修改params数据 引起接口的重新发送 对象的合并是一个整体覆盖 改了对象的整体引用\n        setParams({\n            ...params,\n            ...itemData,\n            ..._params\n        })\n    }\n    // 翻页实现\n    const pageChange = (page) => {\n        setParams({\n            ...params,\n            page\n        })\n    }\n\n    const formatStatus = (type) => {\n        const TYPES = {\n            1: <Tag color=\"red\">审核成功</Tag>,\n            2: <Tag color=\"green\">审核失败</Tag>\n        }\n        return TYPES[type]\n    }\n\n    // 删除文章\n    const delArticle = async (data) => {\n        await http.delete(`/mp/articles/${data.id}`)\n        // 刷新一下列表\n        setParams({\n            ...params,\n            page: 1\n        })\n    }\n\n    // 编辑文章\n    const navigate = useNavigate()\n    const goPublish = (data) => {\n        navigate(`/publish?id=${data.id}`)\n    }\n\n    const columns = [\n        {\n            title: '标题',\n            dataIndex: 'title',\n            width: 220\n        },\n        {\n            title: '栏目',\n            dataIndex: 'categoryRows',\n            width: 220,\n            render: (rows) => {\n                return rows && rows['category_name'];\n            }\n        },\n        {\n            title: '状态',\n            dataIndex: 'type',\n            render: data => formatStatus(data)\n        },\n        {\n            title: '发布时间',\n            dataIndex: 'creat_time'\n        },\n        {\n            title: '操作',\n            render: data => {\n                return (\n                    <Space size=\"middle\">\n                        <Button\n                            type=\"primary\"\n                            shape=\"circle\"\n                            icon={<EditOutlined/>}\n                            onClick={() => goPublish(data)}/>\n                        <Button\n                            type=\"primary\"\n                            danger\n                            shape=\"circle\"\n                            icon={<DeleteOutlined/>}\n                            onClick={() => delArticle(data)}\n                        />\n                    </Space>\n                )\n            },\n            fixed: 'right'\n        }\n    ]\n\n    return (\n        <div>\n            {/* 筛选区域 */}\n            <Card\n                title={\n                    <Breadcrumb separator=\">\">\n                        <Breadcrumb.Item>\n                            <Link to=\"/home\">首页</Link>\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item>内容管理</Breadcrumb.Item>\n                    </Breadcrumb>\n                }\n                style={{marginBottom: 20}}\n            >\n                <Form onFinish={onFinish}>\n                    <Form.Item label=\"关键字\" name=\"keywords\" style={{width: '310px'}}>\n                        <Input placeholder=\"请输入关键字\" />\n                    </Form.Item>\n                    <Form.Item label=\"状态\" name=\"status\">\n                        <Radio.Group>\n                            {\n                                RadioList.map(item =>\n                                    <Radio value={item.key} key={item.key}>{item.name}</Radio>\n                                )\n                            }\n                        </Radio.Group>\n                    </Form.Item>\n\n                    <Form.Item label=\"频道\" name=\"channel_id\">\n                        <Select placeholder=\"请选择文章频道\" style={{width: '265px'}}>\n                            {\n                                Channel.map(item =>\n                                    <Option key={item.id} value={item.id}>{item.category_name}</Option>\n                                )\n                            }\n                        </Select>\n                    </Form.Item>\n\n                    <Form.Item label=\"日期\" name=\"date\">\n                        {/* 传入locale属性 控制中文显示*/}\n                        <RangePicker locale={locale}></RangePicker>\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" style={{marginLeft: 80}}>\n                            筛选\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Card>\n            {/* 文章列表区域 */}\n            <Card title={`根据筛选条件共查询到 ${articleData.count} 条结果：`}>\n                <Table\n                    rowKey=\"id\"\n                    columns={columns}\n                    dataSource={articleData.list}\n                    pagination={\n                        {\n                            pageSize: params.size,\n                            total: articleData.count,\n                            onChange: pageChange,\n                            current: params.page\n                        }\n                    }\n                    bordered\n                />\n            </Card>\n        </div>\n    )\n}\n\nexport default connect(\n    state =>({\n        channelReducer:state.channelReducer\n    }),{get_channel_async}\n)(Article)","//获取用户信息\nexport const get_user_async=()=>({type:'ASYNC_USER_INFO'})\n\nexport const get_channel_async=()=>({type:'ASYNC_CHANNEL_INFO'})"],"names":["Option","Select","RangePicker","DatePicker","connect","state","channelReducer","get_channel_async","props","useState","Channel","setChannel","useEffect","channel","key","name","RadioList","list","count","articleData","setArticleData","page","size","keywords","params","setParams","http","recode","data","rows","delArticle","id","navigate","useNavigate","columns","title","dataIndex","width","render","type","color","shape","icon","onClick","goPublish","danger","fixed","separator","to","style","marginBottom","onFinish","values","date","itemData","_params","begin_pubdate","format","end_pubdate","label","placeholder","map","item","value","category_name","locale","htmlType","marginLeft","rowKey","dataSource","pagination","pageSize","total","onChange","current","bordered","get_user_async"],"sourceRoot":""}