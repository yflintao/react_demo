{"version":3,"file":"static/js/972.8620a55f.chunk.js","mappings":"6QAMOA,EAAUC,EAAAA,EAAAA,OAqHjB,GAAeC,EAAAA,EAAAA,KAlHF,WACT,OAAgCC,EAAAA,EAAAA,UAAS,CACrCC,KAAM,GACNC,MAAO,IAFX,eAAOC,EAAP,KAAiBC,EAAjB,KAMA,GAA4BJ,EAAAA,EAAAA,UAAS,CACjCK,KAAM,EACNC,KAAM,GACNC,SAAS,KAHb,eAAOC,EAAP,KAAeC,EAAf,MAMAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAQ,yCAAG,wGACPC,GAAeC,EAAAA,EAAAA,IAAWL,GAChCM,QAAQC,IAAI,gBAAgBH,GAFf,SAGQI,EAAAA,GAAAA,IAAS,kBAAmB,CAACR,OAAOI,IAH5C,OAGPK,EAHO,SAISA,EAAOC,KAAtBhB,EAJM,EAINA,MAAOiB,EAJD,EAICA,KACdf,EAAY,CACRH,KAAMkB,EACNjB,MAAAA,IAPS,2CAAH,qDAUdS,GACH,GAAE,CAACH,IAEJ,IA0BMY,EAAU,CACZ,CACIC,MAAO,eACPC,UAAW,QACXC,MAAO,KAEX,CACIF,MAAO,eACPC,UAAW,eACXC,MAAO,IACPC,OAAQ,SAACL,GACL,OAAOA,GAAQA,EAAI,aACtB,GAEL,CACIE,MAAO,eACPC,UAAW,OACXE,OAAQ,SAAAN,GAAI,OAzBJ,IAyBqBA,GAxBnB,SAAC,IAAD,CAAKO,MAAM,QAAX,uCAEA,SAAC,IAAD,CAAKA,MAAM,MAAX,+BAsBE,GAEhB,CACIJ,MAAO,2BACPC,UAAW,eAInB,OACI,4BAEI,SAAC,IAAD,CACID,MAAM,iCACNK,MAAO,CAACC,aAAc,IAF1B,UAII,SAAC9B,EAAD,CACI+B,YAAY,+DACZC,YAAU,EACVC,YAAY,SACZxB,KAAK,QACLyB,SA/DC,SAACxB,GACdE,GAAU,kBACHD,GADE,IAELH,KAAK,EACLE,SAAAA,IAEP,OA6DO,SAAC,IAAD,CAAMc,MAAK,uEAAgBlB,EAASD,MAAzB,6BAAX,UACI,SAAC,IAAD,CACI8B,OAAO,KACPZ,QAASA,EACTa,WAAY9B,EAASF,KACrBiC,WACI,CACIC,SAAU3B,EAAOF,KACjB8B,MAAOjC,EAASD,MAChBmC,SAnEL,SAAChC,GAChBI,GAAU,kBACHD,GADE,IAELH,KAAAA,IAEP,EA+DuBiC,QAAS9B,EAAOH,MAGxBkC,UAAQ,QAK3B,G","sources":["pages/News/index.js"],"sourcesContent":["import './index.scss'\nimport {observer} from 'mobx-react-lite'\nimport {Table, Tag, Card, Input} from 'antd'\nimport {useEffect, useState} from 'react'\nimport {http,filterData} from '@/utils'\n\nconst {Search} = Input\n\n\nconst News = () => {\n    const [newsData, setNewsData] = useState({\n        list: [],// 文章列表\n        count: 0 // 文章数量\n    })\n\n    // 文章参数管理\n    const [params, setParams] = useState({\n        page: 1,\n        size: 10,\n        keywords:''\n    })\n    // 获取文章列表\n    useEffect(() => {\n        const loadList = async () => {\n            const filterParams = filterData(params);\n            console.log('filterParams:',filterParams);\n            const recode = await http.get('/article/search', {params:filterParams});\n            const {count, rows} = recode.data\n            setNewsData({\n                list: rows,\n                count\n            })\n        }\n        loadList()\n    }, [params])\n\n    const onSearch = (keywords) => {\n        setParams({\n            ...params,\n            page:1,\n            keywords\n        })\n    }\n\n    // 翻页实现\n    const pageChange = (page) => {\n        setParams({\n            ...params,\n            page\n        })\n    }\n\n    const formatStatus = (type) => {\n        let tagHtml = '';\n        if(type === 1){\n            tagHtml = <Tag color=\"green\">审核成功</Tag>\n        }else{\n            tagHtml = <Tag color=\"red\">未审核</Tag>\n        }\n        return tagHtml;\n    }\n\n    const columns = [\n        {\n            title: '标题',\n            dataIndex: 'title',\n            width: 220\n        },\n        {\n            title: '栏目',\n            dataIndex: 'categoryRows',\n            width: 220,\n            render: (rows) => {\n                return rows && rows['category_name'];\n            }\n        },\n        {\n            title: '状态',\n            dataIndex: 'type',\n            render: data => formatStatus(data)\n        },\n        {\n            title: '发布时间',\n            dataIndex: 'creat_time'\n        }\n    ]\n\n    return (\n        <div>\n            {/* 筛选区域 */}\n            <Card\n                title=\"关键词检索\"\n                style={{marginBottom: 12}}\n            >\n                <Search\n                    placeholder=\"输入需要检索的关键词\"\n                    allowClear\n                    enterButton=\"Search\"\n                    size=\"large\"\n                    onSearch={onSearch}\n                />\n            </Card>\n            {/* 列表区域 */}\n            <Card title={`根据筛选条件共查询到 ${newsData.count} 条结果：`}>\n                <Table\n                    rowKey=\"id\"\n                    columns={columns}\n                    dataSource={newsData.list}\n                    pagination={\n                        {\n                            pageSize: params.size,\n                            total: newsData.count,\n                            onChange: pageChange,\n                            current: params.page\n                        }\n                    }\n                    bordered\n                />\n            </Card>\n        </div>\n    )\n}\n\nexport default observer(News)"],"names":["Search","Input","observer","useState","list","count","newsData","setNewsData","page","size","keywords","params","setParams","useEffect","loadList","filterParams","filterData","console","log","http","recode","data","rows","columns","title","dataIndex","width","render","color","style","marginBottom","placeholder","allowClear","enterButton","onSearch","rowKey","dataSource","pagination","pageSize","total","onChange","current","bordered"],"sourceRoot":""}